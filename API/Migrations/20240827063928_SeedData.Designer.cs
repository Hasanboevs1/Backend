// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240827063928_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("API.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentRegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2001, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            PhoneNumber = "555-1234",
                            StudentRegNumber = "STU10001"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            PhoneNumber = "555-5678",
                            StudentRegNumber = "STU10002"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1999, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.brown@example.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            PhoneNumber = "555-8765",
                            StudentRegNumber = "STU10003"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2002, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana.prince@example.com",
                            FirstName = "Diana",
                            LastName = "Prince",
                            PhoneNumber = "555-9999",
                            StudentRegNumber = "STU10004"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2003, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eva.green@example.com",
                            FirstName = "Eva",
                            LastName = "Green",
                            PhoneNumber = "555-1122",
                            StudentRegNumber = "STU10005"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2004, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "frank.moore@example.com",
                            FirstName = "Frank",
                            LastName = "Moore",
                            PhoneNumber = "555-2233",
                            StudentRegNumber = "STU10006"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2005, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "grace.lee@example.com",
                            FirstName = "Grace",
                            LastName = "Lee",
                            PhoneNumber = "555-3344",
                            StudentRegNumber = "STU10007"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2006, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hannah.wilson@example.com",
                            FirstName = "Hannah",
                            LastName = "Wilson",
                            PhoneNumber = "555-4455",
                            StudentRegNumber = "STU10008"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2007, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ian.taylor@example.com",
                            FirstName = "Ian",
                            LastName = "Taylor",
                            PhoneNumber = "555-5566",
                            StudentRegNumber = "STU10009"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2008, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jasmine.anderson@example.com",
                            FirstName = "Jasmine",
                            LastName = "Anderson",
                            PhoneNumber = "555-6677",
                            StudentRegNumber = "STU10010"
                        });
                });

            modelBuilder.Entity("API.Entities.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Grade")
                        .HasColumnType("REAL");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 1,
                            Grade = 85.0
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2,
                            Grade = 90.0
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            Grade = 78.0
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 3,
                            Grade = 82.0
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2,
                            Grade = 88.0
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 4,
                            Grade = 91.0
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5,
                            Grade = 75.0
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 6,
                            Grade = 85.0
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 7,
                            Grade = 92.0
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 8,
                            Grade = 80.0
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3,
                            Grade = 82.0
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2,
                            Grade = 88.0
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4,
                            Grade = 91.0
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5,
                            Grade = 75.0
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 1,
                            Grade = 85.0
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 2,
                            Grade = 90.0
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 1,
                            Grade = 78.0
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 3,
                            Grade = 82.0
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 3,
                            Grade = 82.0
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 2,
                            Grade = 88.0
                        });
                });

            modelBuilder.Entity("API.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 5,
                            Name = "History"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Geography"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Economics"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Art"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("API.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1975, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "555-7777"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1980, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "555-8888"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1985, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.johnson@example.com",
                            FirstName = "Robert",
                            LastName = "Johnson",
                            PhoneNumber = "555-9999"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1990, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            PhoneNumber = "555-1010"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1995, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.wilson@example.com",
                            FirstName = "Michael",
                            LastName = "Wilson",
                            PhoneNumber = "555-2020"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.taylor@example.com",
                            FirstName = "Sarah",
                            LastName = "Taylor",
                            PhoneNumber = "555-3030"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1978, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.brown@example.com",
                            FirstName = "David",
                            LastName = "Brown",
                            PhoneNumber = "555-4040"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1982, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura.miller@example.com",
                            FirstName = "Laura",
                            LastName = "Miller",
                            PhoneNumber = "555-5050"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1987, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.wilson@example.com",
                            FirstName = "James",
                            LastName = "Wilson",
                            PhoneNumber = "555-6060"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1992, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olivia.moore@example.com",
                            FirstName = "Olivia",
                            LastName = "Moore",
                            PhoneNumber = "555-7070"
                        });
                });

            modelBuilder.Entity("API.Entities.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            TeacherId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            TeacherId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            TeacherId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            TeacherId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            TeacherId = 6,
                            SubjectId = 6
                        },
                        new
                        {
                            TeacherId = 7,
                            SubjectId = 7
                        },
                        new
                        {
                            TeacherId = 8,
                            SubjectId = 8
                        },
                        new
                        {
                            TeacherId = 9,
                            SubjectId = 9
                        },
                        new
                        {
                            TeacherId = 10,
                            SubjectId = 10
                        });
                });

            modelBuilder.Entity("API.Entities.StudentSubject", b =>
                {
                    b.HasOne("API.Entities.Student", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("API.Entities.TeacherSubject", b =>
                {
                    b.HasOne("API.Entities.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("API.Entities.Student", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("API.Entities.Subject", b =>
                {
                    b.Navigation("StudentSubjects");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("API.Entities.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
